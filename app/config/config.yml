imports:
    - { resource: parameters.yml }
    - { resource: security.yml }

framework:
    #esi:             ~
    #translator:      { fallback: "%locale%" }
    secret:          "%secret%"
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: ~
    form:            ~
    csrf_protection: ~
    validation:      { enable_annotations: true }
    templating:
        engines: ['twig']
        #assets_version: SomeVersionScheme
    default_locale:  "%locale%"
    trusted_hosts:   ~
    trusted_proxies: ~
    session:
        # handler_id set to null will use default session handler from php.ini
        handler_id:  ~
    fragments:       ~
    http_method_override: true

# Twig Configuration
twig:
    debug:            "%kernel.debug%"
    strict_variables: "%kernel.debug%"

# Doctrine Configuration
doctrine:
    dbal:
        driver:   "%database_driver%"
        host:     "%database_host%"
        port:     "%database_port%"
        dbname:   "%database_name%"
        user:     "%database_user%"
        password: "%database_password%"
        charset:  UTF8

    orm:
        auto_generate_proxy_classes: "%kernel.debug%"
        auto_mapping: true

# Swiftmailer Configuration
swiftmailer:
    transport: "%mailer_transport%"
    host:      "%mailer_host%"
    username:  "%mailer_user%"
    password:  "%mailer_password%"
    spool:     { type: memory }


fos_elastica:
    clients:
        default:
            servers: %catalog_elastic_servers%
    indexes:
        paris_survival_guide:
            index_name: paris_survival_guide
            types:
                crashes:
                    mappings:
                        id: { type: integer }
                        dateTime: {  }
                        arrondissement: { type: string }
                        meteo: { type: string }
                        season: { type: string }
                        address: { type: string }
                        street1: { type: string }
                        street2: { type: string }
                        vehicule1: { type: string }
                        vehicule1Status: { type: string }
                        vehicule1Gravity: { type: string }
                        vehicule2: { type: string }
                        vehicule2Status: { type: string }
                        vehicule2Gravity: { type: string }
                        vehicule3: { type: string }
                        vehicule3Status: { type: string }
                        vehicule3Gravity: { type: string }
                    persistence:
                        driver: orm
                        model: ParisSurvivalGuide\AppBundle\Entity\Crash
                        provider: ~
                        listener:
                            # Immediate: false forces ElasticaBundle to listen the postFlush event
                            # instead of PrePersist and PreUpdate, avoiding a fatal error with Doctrine.
                            immediate: false
                            logger: true
                        finder: ~